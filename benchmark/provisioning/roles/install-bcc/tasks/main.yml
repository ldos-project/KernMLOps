---
# tasks file for install-bcc

- name: Create a symbolic link python for python3
  become: true
  ansible.builtin.file:
    src: /usr/bin/python3
    dest: /usr/bin/python
    state: link

- name: Set required BPF capabilities on python
  become: true
  community.general.capabilities:
    path: "/usr/bin/python{{ ansible_python_version.split('.')[:2] | join('.') }}"
    capability: CAP_BPF,CAP_SYS_ADMIN,CAP_DAC_READ_SEARCH,CAP_SYS_RESOURCE,CAP_NET_ADMIN,CAP_SETPCAP+eip
    state: present

- name: Install apt packages to build BCC tools
  become: true
  ansible.builtin.apt:
    update_cache: true
    pkg:
      - zip
      - bison
      - build-essential
      - cmake
      - flex
      - git
      - libedit-dev
      - libllvm18
      - llvm-18-dev
      - libcap2-bin
      - libclang-18-dev
      - python3
      - python3-pip
      - zlib1g-dev
      - libelf-dev
      - libfl-dev
      - python3-setuptools
      - liblzma-dev
      - libdebuginfod-dev
      - arping
      - netperf
      - iperf
      - libpolly-18-dev
      - "linux-headers-{{ ansible_kernel }}"
    state: present

- name: Check BCC installed
  stat:
    path: "{{ download_location }}"
  register: bcc

- name: Clone BCC tools repo
  become: true
  ansible.builtin.git:
    repo: 'https://github.com/iovisor/bcc.git'
    dest: "{{ download_location }}"
    single_branch: true
    version: "v{{ version }}"
  register: bcc_download
  when: not bcc.stat.exists

- name: Create BCC build dir
  become: true
  ansible.builtin.file:
    path: "{{ download_location }}/build"
    state: directory
    mode: '0755'
  when: bcc_download.changed

- name: Initialize BCC cmake build
  become: true
  ansible.builtin.command:
    cmd: cmake -DPYTHON_CMD=python3 ..
    chdir: "{{ download_location }}/build"
  when: bcc_download.changed

- name: Build BCC tools
  become: true
  community.general.make:
    chdir: "{{ download_location }}/build"
    target: all
    jobs: "{{ ansible_facts['processor_nproc'] }}"
  when: bcc_download.changed

- name: Install BCC tools
  become: true
  community.general.make:
    chdir: "{{ download_location }}/build"
    target: install
  when: bcc_download.changed
