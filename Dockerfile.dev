ARG BUILD_IMAGE=ubuntu:24.04
FROM ubuntu:24.04 AS bcc

USER root

WORKDIR /dependencies

# bcc dependencies
ENV DEBIAN_FRONTEND=noninteractive
RUN apt update -y \
    && apt install -y \
    zip \
    curl \
    build-essential \
    cmake \
    git \
    python3 \
    python3-pip \
    python3-setuptools \
    bpfcc-tools \
    && apt clean

# Install OSQuery
RUN mkdir -p /etc/apt/keyrings
RUN curl -fsSL  https://pkg.osquery.io/deb/pubkey.gpg | gpg --dearmor -o /etc/apt/keyrings/osquery.gpg
RUN echo "deb [arch=amd64 signed-by=/etc/apt/keyrings/osquery.gpg] https://pkg.osquery.io/deb deb main" \
  | tee /etc/apt/sources.list.d/osquery.list > /dev/null
RUN apt update -y \
    && apt install -y \
    osquery \
    && apt clean
RUN cp /opt/osquery/share/osquery/osquery.example.conf /etc/osquery/osquery.conf

# benchmark dependencies
RUN apt update -y \
    && apt install -y \
    git \
    fakeroot \
    build-essential \
    libncurses-dev \
    xz-utils \
    libssl-dev \
    bc \
    flex \
    libelf-dev \
    bison \
    && apt clean

# Base development image
FROM ${BUILD_IMAGE} AS dev

ARG IS_CI=true

RUN apt update -y \
  &&  apt install -y \
  vim \
  pkg-config \
  shfmt \
  && apt clean

RUN if [ "${IS_CI}" != "true" ] ; then \
  apt update -y \
    &&  apt install -y \
    vim \
    zsh \
    && apt clean; fi

COPY --chown=root requirements.txt /root/requirements.txt
RUN pip install \
  --break-system-packages \
  --user --no-warn-script-location \
  -r /root/requirements.txt
RUN ln -s /usr/bin/python3.12 /usr/bin/python

ARG UNAME
ARG UID
ARG GID

# May be required for Ubuntu:24.04 images that come with uid 1000
RUN deluser --remove-home ubuntu
RUN if [ "${UNAME}" != "root" ] ; then groupadd -g ${GID} ${UNAME} \
      &&  useradd -ms /bin/bash  -u "${UID}" -g "${GID}" ${UNAME}; fi

RUN mkdir -p /home/${UNAME} \
      && chown ${UNAME}:${UNAME} /home/${UNAME}

ARG SRC_DIR=/KernMLOps
RUN echo "export SRC_DIR=${SRC_DIR}" >> /root/.profile
RUN echo "export UNAME=${UNAME}" >> /root/.profile
RUN echo "export GID=${GID}" >> /root/.profile

WORKDIR /home/${UNAME}

WORKDIR ${SRC_DIR}

LABEL creator="${UNAME}"
LABEL project="KernMLOps"
